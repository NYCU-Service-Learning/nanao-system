name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  build_and_test:
    name: Build and Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code from Repository
        uses: actions/checkout@v3

      - name: Set up Node.js Environment for Backend
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies for Backend
        working-directory: ./backend
        run: npm install

      # - name: Run Tests for Backend
      #   working-directory: ./backend
      #   run: npm test

      # - name: Lint Code for Backend
      #   working-directory: ./backend
      #   run: npm run lint

      - name: Build Backend Application
        working-directory: ./backend
        run: npm run build

      - name: Set up Node.js Environment for Frontend
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies for Frontend
        working-directory: ./frontend
        run: npm install

      # - name: Run Tests for Frontend
      #   working-directory: ./frontend
      #   run: npm test

      # - name: Lint Code for Frontend
      #   working-directory: ./frontend
      #   run: npm run lint

      - name: Build Frontend Application
        working-directory: ./frontend
        run: npm run build

  build_and_push:
    name: Build and Push Docker Images
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code from Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx for Multi-platform Builds
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image for Backend
        working-directory: ./backend
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t userwei/nycu_service-learning-nanao:backend-$IMAGE_TAG .
          docker push userwei/nycu_service-learning-nanao:backend-$IMAGE_TAG

      - name: Build and Push Docker Image for Frontend
        working-directory: ./frontend
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t userwei/nycu_service-learning-nanao:frontend-$IMAGE_TAG .
          docker push userwei/nycu_service-learning-nanao:frontend-$IMAGE_TAG

      # - name: Deploy Application via SSH
      #   if: ${{ github.ref == 'refs/heads/main' }}
      #   uses: appleboy/ssh-action@v0.1.7
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USER }}
      #     key: ${{ secrets.SSH_KEY }}
      #     script: |
      #       cd /path/to/your/deployment
      #       git pull origin main
      #       docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
      #       docker-compose pull
      #       docker-compose up -d --remove-orphans
